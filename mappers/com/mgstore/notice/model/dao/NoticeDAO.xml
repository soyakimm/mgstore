<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="NoticeDAO">
	<resultMap type="com.mgstore.notice.model.dto.AskedDTO" id="generalAskedResultMap">
		<id property="askId" column="ASK_ID"/>
		<result property="askTitle" column="ASK_TITLE"/>
		<result property="askContents" column="ASK_CONTENTS"/>
		<result property="createdDate" column="ASK_DATE"/>
		<result property="askViews" column="ASK_VIEWS"/>
		<result property="askExposure" column="ASK_EXPOSURE"/>
		<result property="userId" column="USER_ID"/>
		<result property="updateDate" column="ASK_EDIT_DATE"/>
		<result property="categoryCode" column="ASK_CATE_ID"/>
		
		<association property="writer" resultMap="userResultMap"/>
		<association property="category" resultMap="categoryResultMap"/>
	</resultMap>
	
	<resultMap type="com.mgstore.user.model.dto.UserDTO" id="userResultMap">
		<id property="userId" column="USER_ID"/>
		<result property="userPwd" column="USER_PWD"/>
		<result property="userName" column="USER_NAME"/>
		<result property="nickname" column="NICKNAME"/>
		<result property="email" column="EMAIL"/>
		<result property="phone" column="PHONE"/>
		<result property="address" column="ADDRESS"/>
		<result property="agreement" column="AGREEMENT"/>
		<result property="role" column="ROLE"/>
		<result property="userStatus" column="USER_STATUS"/>
		<result property="regDate" column="REG_DATE"/>
		<result property="modDate" column="MOD_DATE"/>
	</resultMap>
	
	<resultMap type="com.mgstore.notice.model.dto.AskCategoryDTO" id="categoryResultMap">
		<id property="askCategoryId" column="ASK_CATE_ID"></id>
		<result property="askCategoryName" column="ASK_CATE_NAME"/>
	</resultMap>
	
	<resultMap type="com.mgstore.notice.model.dto.InqDTO" id="generalInqResultMap">
		<id property="inqId" column="PER_ID"/>
		<result property="inqTitle" column="PER_TITLE"/>
		<result property="inqContents" column="PER_CONTENTS"/>
		<result property="inqDate" column="PER_DATE"/>
		<result property="inqAnsStatus" column="PER_ANS_STATUS"/>
		<result property="inqDelStatus" column="DEL_STATUS"/>
		<result property="ansContents" column="PER_ANS"/>
		<result property="ansDate" column="PER_ANS_DATE"/>
		<result property="ansDelStatus" column="ANS_DEL_STATUS"/>
		<result property="userId" column="USER_ID"/>
		<result property="inqCategoryId" column="PER_CATE_ID"/>
		<result property="adminId" column="MANAVER_ID"/>
		
		<association property="inqCategoryName" resultMap="inqCategoryResultMap"></association>
	</resultMap>
	
	<resultMap type="com.mgstore.notice.model.dto.InqCategoryDTO" id="inqCategoryResultMap">
		<id property="inqCategoryCode" column="PER_CATE_ID"/>
		<result property="inqCategoryName" column="PER_CATE_NAME"/>
	</resultMap>
	
	
	
	<!-- 자주묻는질문 조회 -->
	<select id="selectAskedList" resultMap="generalAskedResultMap">
	SELECT
		   A.ASK_ID
		 , A.ASK_TITLE
		 , A.ASK_CONTENTS
		 , A.ASK_DATE
		 , A.ASK_VIEWS
		 , A.ASK_EXPOSURE
		 , A.USER_ID
		 , B.NICKNAME
		 , A.ASK_EDIT_DATE
		 , A.ASK_CATE_ID
		 , C.ASK_CATE_NAME
	 FROM ASKED A
	 JOIN TBL_USER B ON (A.USER_ID = B.USER_ID)
	 JOIN ASKED_CATE C ON (A.ASK_CATE_ID = C.ASK_CATE_ID)
	 <where>
	 	<if test="searchCondition == '이용문의'">
	 	A.ASK_CATE_ID = 1
	 	</if>
	 	<if test="searchCondition == '구매문의'">
	 	A.ASK_CATE_ID = 2
	 	</if>
	 	<if test="searchCondition == '배송문의'">
	 	A.ASK_CATE_ID = 3
	 	</if>
	 	<if test="searchCondition == '기타'">
	 	A.ASK_CATE_ID = 4
	 	</if>
	 	AND A.ASK_EXPOSURE = 'Y'
	 </where>
	 ORDER BY A.ASK_ID DESC
	</select>
	
	<!-- 자주묻는질문 등록 -->
	<insert id="insertAsked">
		INSERT
		  INTO ASKED
		(
		  ASK_ID,
		  ASK_TITLE,
		  ASK_CONTENTS,
		  USER_ID,
		  ASK_CATE_ID
		)
		VALUES
		(
		  ASK_SEQ.NEXTVAL,
		  #{ askTitle },
		  #{ askContents },
		  #{ userId },
		  #{ categoryCode }
		)
	</insert>
	
	<!-- 자주 묻는 질문 수정 조회용 메소드 -->
	<select id="selectAskedDetail" resultMap="generalAskedResultMap">
		SELECT
			   A.ASK_ID
			 , A.ASK_TITLE
			 , A.ASK_CONTENTS
			 , A.ASK_DATE
			 , A.ASK_VIEWS
			 , A.ASK_EXPOSURE
			 , A.USER_ID
			 , B.NICKNAME
			 , A.ASK_EDIT_DATE
			 , A.ASK_CATE_ID
			 , C.ASK_CATE_NAME
		 FROM ASKED A
	     JOIN TBL_USER B ON (A.USER_ID = B.USER_ID)
	 	 JOIN ASKED_CATE C ON (A.ASK_CATE_ID = C.ASK_CATE_ID)
		WHERE A.ASK_EXPOSURE = 'Y'
		  AND A.ASK_ID = #{ askId }
	</select>
	
	<!-- 자주 묻는 질문 수정 -->
	<update id="updateAsked">
		UPDATE
		       ASKED
		   SET ASK_TITLE = #{ askTitle },
		       ASK_CATE_ID = #{ categoryCode },
		       ASK_CONTENTS = #{ askContents },
		       ASK_EDIT_DATE = SYSDATE
		 WHERE ASK_ID = #{ askId }
	</update>
	
	<!-- 자주 묻는 질문 삭제 -->
	<delete id="deleteAsked">
		UPDATE
			   ASKED
		   SET ASK_EXPOSURE = 'Y'
		 WHERE ASK_ID = #{ askId }
	</delete>
	
	<!-- 1:1 문의 조회 -->
	<select id="selectInqList" resultMap="generalInqResultMap">
		SELECT
		       A.PER_ID,
		       A.PER_TITLE,
		       A.PER_CONTENTS,
		       A.PER_DATE,
		       A.PER_ANS_STATUS,
		       A.DEL_STATUS,
		       A.PER_ANS,
		       A.PER_ANS_DATE,
		       A.ANS_DEL_STATUS,
		       A.USER_ID,
		       A.PER_CATE_ID,
		       B.PER_CATE_NAME,
		       A.MANAGER_ID
		  FROM PERSONAL_INQUIRY A
		  JOIN PER_INQ_CATE B ON (A.PER_CATE_ID = B.PER_CATE_ID)
		  <where>
		  	<if test="searchCondition == '답변완료'">
		  	A.PER_CATE_ID = 10
		  	</if>
		  	<if test="searchCondition == '답변미완료'">
		  	A.PER_CATE_ID = 20
		  	</if>
		  	AND A.DEL_STATUS = 'N'
		  </where>
		  ORDER BY A.PER_ID DESC
	  </select>
	  
	  <!-- 1:1 문의 등록 -->
	<insert id="insertInq">
		INSERT
		  INTO PERSONAL_INQUIRY
		  (
		    PER_ID,
		    PER_TITLE,
		    PER_CONTENTS,
		    PER_ANS,
		    USER_ID,
		    PER_CATE_ID,
		    MANAGER_ID
		  )
		  VALUES
		  (
		    SEQ_PER_INQ.NEXTVAL,
		    #{ inqTitle },
		    #{ inqContents },
		    'NO DATA',
		    #{ userId },
		    20,
		    'NO DATA'
		  )
	</insert>
	
	<!-- 1:1 문의글 수정 조회용 메소드 -->
	<select id="selectInqDetail" resultMap="generalInqResultMap">
		SELECT
		       A.PER_ID,
		       A.PER_TITLE,
		       A.PER_CONTENTS,
		       A.PER_DATE,
		       A.PER_ANS_STATUS,
		       A.DEL_STATUS,
		       A.PER_ANS,
		       A.PER_ANS_DATE,
		       A.ANS_DEL_STATUS,
		       A.USER_ID,
		       A.PER_CATE_ID,
		       B.PER_CATE_NAME,
		       A.MANAGER_ID
		  FROM PERSONAL_INQUIRY A
		  JOIN PER_INQ_CATE B ON (A.PER_CATE_ID = B.PER_CATE_ID)
		 WHERE A.DEL_STATUS = 'N'
		   AND A.PER_ID = #{ inqId }
		 ORDER BY A.PER_ID DESC
	</select>
	
	<!-- 문의 수정 -->
	<update id="updateQue">
		UPDATE
		       PERSONAL_INQUIRY
		   SET PER_TITLE = #{ inqTitle },
		       PER_CONTENTS = #{ inqContents },
		       PER_DATE = SYSDATE
		 WHERE PER_ID = #{ inqId }
	</update>
	
	<!-- 문의 삭제 -->
	<update id="deleteInq">
		UPDATE
		       PERSONAL_INQUIRY
		   SET DEL_STATUS = 'Y'
		 WHERE PER_ID = #{ inqId }
	</update>
	
	<!-- 답변 등록 -->
	<update id="insertAns">
		UPDATE
		       PERSONAL_INQUIRY
		   SET PER_ANS_STATUS = 'Y' ,
		       PER_ANS = #{ ansContents },
		       PER_CATE_ID = 10,
		       MANAGER_ID = #{ adminId }
		 WHERE PER_ID = #{ inqId }		   
	</update>
	
	<!-- 답변 수정 -->
	<update id="updateAns">
		UPDATE
		       PERSONAL_INQUIRY
		   SET PER_ANS_STATUS = 'Y',
		       PER_ANS = #{ ansContents },
		       PER_ANS_DATE = SYSDATE
		 WHERE PER_ID = #{ inqId }
	</update>
	
	<!-- 답변 삭제 -->
	<update id="deleteAns">
		UPDATE
		       PERSONAL_INQUIRY
		   SET PER_ANS_STATUS = 'N',
		       PER_ANS = 'NO DATA',
		       PER_CATE_ID = 20
		 WHERE PER_ID = #{ inqId }
	</update>


</mapper>